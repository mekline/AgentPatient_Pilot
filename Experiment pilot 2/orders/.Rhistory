quantile(mentionOb_2.boot.mean$thetastar, c(0.025, 0.975))
mentionOb_3.boot.mean = bootstrap(mydata[mydata$trialVersion=="3_4",]$mentionObject, 1000, mean)
quantile(mentionOb_3.boot.mean$thetastar, c(0.025, 0.975))
mentionOb_4.boot.mean = bootstrap(mydata[mydata$trialVersion=="4_3",]$mentionObject, 1000, mean)
quantile(mentionOb_4.boot.mean$thetastar, c(0.025, 0.975))
mentionOb_5.boot.mean = bootstrap(mydata[mydata$trialVersion=="5_2",]$mentionObject, 1000, mean)
quantile(mentionOb_5.boot.mean$thetastar, c(0.025, 0.975))
mentionOb_6.boot.mean = bootstrap(mydata[mydata$trialVersion=="6_1",]$mentionObject, 1000, mean)
quantile(mentionOb_6.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_1.boot.mean = bootstrap(mydata[mydata$trialVersion=="1_6",]$mentionVerb, 1000, mean)
quantile(mentionVb_1.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_2.boot.mean = bootstrap(mydata[mydata$trialVersion=="2_5",]$mentionVerb, 1000, mean)
quantile(mentionVb_2.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_3.boot.mean = bootstrap(mydata[mydata$trialVersion=="3_4",]$mentionVerb, 1000, mean)
quantile(mentionVb_3.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_4.boot.mean = bootstrap(mydata[mydata$trialVersion=="4_3",]$mentionVerb, 1000, mean)
quantile(mentionVb_4.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_5.boot.mean = bootstrap(mydata[mydata$trialVersion=="5_2",]$mentionVerb, 1000, mean)
quantile(mentionVb_5.boot.mean$thetastar, c(0.025, 0.975))
mentionVb_6.boot.mean = bootstrap(mydata[mydata$trialVersion=="6_1",]$mentionVerb, 1000, mean)
quantile(mentionVb_6.boot.mean$thetastar, c(0.025, 0.975))
########
#Lump by subject to get frequency scores! Just for fun There are 2 trials per version (1_6, etc)
mentionSubject <- aggregate(mydata$mentionSubject, by = list(mydata$Paycode, mydata$trialVersion), sum)
names(mentionSubject) <- c("Paycode", "trialVersion", "mentionSubject")
mentionObject <- aggregate(mydata$mentionObject, by = list(mydata$Paycode, mydata$trialVersion), sum)
names(mentionObject) <- c("Paycode", "trialVersion", "mentionObject")
mentionVerb <- aggregate(mydata$mentionVerb, by = list(mydata$Paycode, mydata$trialVersion), sum)
names(mentionVerb) <- c("Paycode", "trialVersion", "mentionVerb")
mentionSV <- aggregate(mydata$mentionSV, by = list(mydata$Paycode, mydata$trialVersion), sum)
names(mentionSV) <- c("Paycode", "trialVersion", "mentionSV")
mentionVO <- aggregate(mydata$mentionVO, by = list(mydata$Paycode, mydata$trialVersion), sum)
names(mentionVO) <- c("Paycode", "trialVersion", "mentionVO")
with(mentionSubject, tapply(mentionSubject, list(trialVersion), mean, na.rm=TRUE), drop=TRUE)
with(mentionObject, tapply(mentionObject, list(trialVersion), mean, na.rm=TRUE), drop=TRUE)
with(mentionVerb, tapply(mentionVerb, list(trialVersion), mean, na.rm=TRUE), drop=TRUE)
#(Check with exact SV VO solutions too)
with(mentionSV, tapply(mentionSV, list(trialVersion), mean, na.rm=TRUE), drop=TRUE)
with(mentionVO, tapply(mentionVO, list(trialVersion), mean, na.rm=TRUE), drop=TRUE)
with(mentionSV, tapply(mentionSV, list(trialVersion), my.sd), drop=TRUE)
with(mentionVO, tapply(mentionVO, list(trialVersion), my.sd), drop=TRUE)
########
# Right here, calculate empirical percentages in a random split-half, for the modeling comparisons
set.seed(223344)
mydata$randomHalf <- runif(nrow(mydata),0,1) > 0.5
r1 <- mydata[mydata$randomHalf,]
r2 <- mydata[!(mydata$randomHalf),]
aggregate(r1$mentionSubject, by = list(r1$trialVersion), mean)
aggregate(r1$mentionObject, by = list(r1$trialVersion), mean)
aggregate(r1$mentionVerb, by = list(r1$trialVersion), mean)
aggregate(r2$mentionSubject, by = list(r2$trialVersion), mean)
aggregate(r2$mentionObject, by = list(r2$trialVersion), mean)
aggregate(r2$mentionVerb, by = list(r2$trialVersion), mean)
#verb info, for ditto
foo <- mydata %>%
filter(word1_CODED == "VERB") %>%
select(one_of("verb", "word1")) %>%
arrange(verb)
View(foo)
setwd("~/Dropbox/_Projects/AgentPatient - fMRI/AgentPatientStimuli Repo/Experiment/orders")
help(list.files)
list.files('csv')
list.files()
list.files(pattern='csv')
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
names(tmp)
}
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
print(names(tmp))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[tmp$Condition == "Agent",]$Cond.no <- 1
tmp[tmp$Condition == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
print(unique(tmp$Condition))
tmp[tmp$Condition == "Agent",]$Cond.no <- 1
tmp[tmp$Condition == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
print(unique(tmp$Condition))
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
print(tmp[as.character(tmp$Condition) == "Agent",])
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
print(tmp[as.character(tmp$Condition) == "         Agent",])
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
print(tmp)
}
'd'+'f'
strcat('d','d')
paste('d','d')
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
write.csv(paste('PARA',f))
}
help(write.csv)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,c('TR.onset', 'Cond.no')]
write.csv(tmp, paste('PARA',f))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0]
write.csv(tmp, paste('PARA',f))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
write.csv(tmp, paste('PARA',f))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
write.csv(tmp, paste('PARA',f))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
print('moop')
tmp <- tmp[tmp$Cond.no != 0,]
print('get here')
write.csv(tmp, paste('PARA',f))
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "         Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "        Patient",]$Cond.no <- 2
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
print('moop')
tmp <- tmp[tmp$Cond.no != 0,]
print('get here')
write.csv(tmp, paste('PARA',f))
}
tmp <- read.csv(paste(order.files[1], sep=''), header=T)
tmp
str_trim(tmp$Condition)
import(stringr)
library(stringr)
str_trim(tmp$Condition)
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
print('moop')
tmp <- tmp[tmp$Cond.no != 0,]
print('get here')
write.csv(tmp, paste('PARA',f))
}
help(write.csv)
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
write.csv(tmp, paste('PARA',f), row.names = FALSE)
}
tmp
as.table(tmp)
as.matrix(tmp)
str(tmp)
toString(tmp)
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
tmp$Cond.no <- (as.character(tmp$Cond.no))
write.csv(tmp, paste('PARA',f), row.names = FALSE)
}
toString(tmp)
help(tmp)
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
tmp$Cond.no <- (as.character(tmp$Cond.no))
write.csv(tmp, paste('PARA',f), row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
tmp$Cond.no <- (as.character(tmp$Cond.no))
write.table(tmp, paste('PARA',f), sep=" ", row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
write.table(tmp, paste('PARA',f), sep=" ", row.names = FALSE, col.names = FALSE)
}
help(stringr)
help(str_split)
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
write.table(tmp, paste('PARA',str_split(f,'.')[1], sep=" ", row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- str_split(f,'.')[1]
write.table(tmp, paste('PARA',fname, sep=" ", row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- str_split(f,'.')[1]
write.table(tmp, paste('PARA',fname), sep=" ", row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- str_split(f,'.')[0]
write.table(tmp, paste('PARA',fname), sep=" ", row.names = FALSE, col.names = FALSE)
}
fname
f
str_split(f, '.')
str_split(f, '\.')
str_split(f, 'c')
str_split(f, boundary())
str_split(f, '$.')
str_split(f, boundary('word'))
str_split(f, boundary('word'))[[1]]
str_split(f, boundary('word'))[[1]][1]
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- str_split(f,boundary('word'))[[1]][1]
print(fname)
write.table(tmp, paste('PARA',fname, '.PARA'), sep=" ", row.names = FALSE, col.names = FALSE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA'
cat("#outputs", file=out_file)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=true)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA'
cat("#outputs", file=out_file)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA')
cat("#outputs", file=out_file)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA')
cat("#outputs", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA')
cat("#outputs", file=fname)
#write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA')
cat("#outputs", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA', sep="")
cat("#outputs\n\n", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA', sep="")
cat("#outputs\n\n", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
cat("\n#names\nAgt Pat\n\n#durations\n2 2", file=fname)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA', sep="")
cat("#outputs\n\n", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
cat("\n#names\nAgt Pat\n\n#durations\n2 2", file=fname, append=TRUE)
}
library(stringr)
order.files <- list.files(pattern='csv')
for(f in order.files) {
tmp <- read.csv(paste(f, sep=''), header=T)
tmp$TR.onset <- as.numeric(as.character(tmp$IntendedOnset))/2
tmp$Condition <- str_trim(tmp$Condition)
tmp$Cond.no <- 0
tmp[as.character(tmp$Condition) == "Agent",]$Cond.no <- 1
tmp[as.character(tmp$Condition) == "Patient",]$Cond.no <- 2
tmp <- tmp[tmp$Cond.no != 0,]
tmp <- tmp[, c('TR.onset', 'Cond.no')]
fname <- paste(str_split(f,boundary('word'))[[1]][1], '.PARA', sep="")
cat("#outputs\n\n", file=fname)
write.table(tmp, fname, sep=" ", row.names = FALSE, col.names = FALSE, append=TRUE)
cat("\n#names\nagt pat\n\n#durations\n2 2", file=fname, append=TRUE)
}
